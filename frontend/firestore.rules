rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read/write their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Anyone can read amala spots, authenticated users can create
    match /amalaSpots/{spotId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        (request.auth.uid == resource.data.submittedBy || 
         hasAdminRole(request.auth.uid));
    }
    
    // Anyone can read reviews, authenticated users can create their own
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    // Authenticated users can manage their own votes
    match /votes/{voteId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    // Helper function for admin roles (implement as needed)
    function hasAdminRole(uid) {
      return exists(/databases/$(database)/documents/admins/$(uid));
    }
  }
}